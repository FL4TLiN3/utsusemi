#!/usr/bin/env node

var program = require('commander'),
    request = require('request'),
    path = require('path'),
    fs = require('fs'),
    util = require('../lib/util');

program
.version(JSON.parse(fs.readFileSync(__dirname + '/../package.json', 'utf8')).version)
.option('-t, --target [directory]', 'Add the specified directory of stab [./stub/]', './stub/')
.option('-p, --port [number]', 'specify port number [3000]', 3000)
.option('-n, --hostname [hostname]', 'specify hostname [localhost]', 'localhost')
.option('-s, --silent', 'suppress messages');

program
.command('start')
.description('Start Utsusemi Server.')
.action(function() {
    var Utsusemi = require('../'),
        utsusemi = new Utsusemi({
        port: program.port,
        hostname: program.hostname,
        silent: program.silent || false
    });
    utsusemi.add(path.join(process.cwd(), program.target));
    utsusemi.run();
});

program
.command('init')
.description('Initialize Utsusemi Server.')
.action(function() {
    var dirname = path.join('stub');
    if (!fs.existsSync(dirname)) {
        fs.mkdirSync(dirname);
        util.info('create %s', dirname);
    } else {
        util.info('already initialized.');
    }
});

program
.command('add')
.description('Add Stub.')
.action(function(_path, url) {
    var dirname = path.join('stub'),
        filename = path.join('stub', _path + '.json');
    if (!fs.existsSync(filename)) {
        var dirs = _path.split('/');
        dirs = dirs.splice(0, dirs.length - 1);
        dirs.forEach(function(dir) {
            dirname = path.join(dirname, dir);
            if (!fs.existsSync(dirname)) {
                fs.mkdirSync(dirname);
            }
        });
        if (url) {
            request(url, function (error, response, body) {
                if (!error && response.statusCode == 200) {
                    fs.writeFileSync(filename, body);
                    util.info('create %s by GET %s', filename, url);
                }
            });
        } else {
            fs.writeFileSync(filename, '');
            util.info('create %s', filename);
        }
    } else {
        util.info('%s is already exists.', filename);
    }
});

program.parse(process.argv);

